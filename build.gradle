
plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.0.10'
//    id("io.github.goooler.shadow") version "8.1.7"
}


allprojects {

    group = "net.miourasaki"
    version = "alpha-building-232"

    apply {
        plugin('java')
        plugin('org.jetbrains.kotlin.jvm')
//        plugin("io.github.goooler.shadow")
    }

    repositories {
        mavenCentral()
        maven {
            name = "papermc-repo"
            url = "https://repo.papermc.io/repository/maven-public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
        maven {
            url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        }
        exclusiveContent {
            forRepository { maven { url = "https://api.modrinth.com/maven" } }
            filter { includeGroup "maven.modrinth" }
        }
    }
    kotlin {
        jvmToolchain(21)
    }

    processResources {
        def props = [version: version]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }

}


def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}


subprojects {


    tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

//    tasks.shadowJar {
//        destinationDirectory.set(file("$rootDir/target"))
//        archiveClassifier.set("")
//        archiveFileName.set(rootProject.name + "-" + project.name + "-" + project.version + ".jar")
//    }
}


//task copyClassesFromSubprojects(type: Copy) {
//    // 假设我们想要复制到的目标目录是父项目的 build/mergedClasses
//    into 'build/classes'
//
//    // 遍历所有子项目
//    subprojects.each { subproject ->
//        // 根据Gradle版本和配置，classes目录的路径可能有所不同
//        // 这里以 Gradle 7 及以上版本，使用 java 插件为例
//        def classesDir = subproject.file("${subproject.buildDir}/classes")
//
//        // 检查目录是否存在
//        if (classesDir.exists()) {
//            // 复制目录内容
//            from classesDir
//        }
//    }
//}

dependencies {
    // main lib
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"

    // plugin lib
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'maven.modrinth:pl3xmap:1.21-500'

    // api module
    implementation project(':api')


    // other

    // database
    implementation 'org.mongodb:mongodb-driver-sync:5.1.2'
}

sourceSets {
    main {
        java {
            srcDirs = ['api/src/main/java', 'paper/src/main/java'] // 添加额外的源代码目录
        }
        resources {
            srcDirs = ['api/src/main/resources', 'paper/src/main/resources'] // 添加额外的资源目录
        }
    }
}
